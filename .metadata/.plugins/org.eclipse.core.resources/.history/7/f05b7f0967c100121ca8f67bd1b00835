package edu.nchu.cs.news;

import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.SQLException;
import android.database.sqlite.SQLiteDatabase;
import android.util.Log;
import edu.nchu.cs.news.NewsDbHelper;



public class NewsDbConnector {
	
	private SQLiteDatabase mNewsDbRW;
	private NewsDbHelper newsDbHp; // database helper
	
	private static final String DB_NAME = "nchucsnews",
								DB_SYS_TABLE = "system",
								DB_NEWS_TABLE = "news_cache";
	
	public NewsDbConnector(Context context){
		newsDbHp =  new NewsDbHelper(context, DB_NAME, null, 1);

		newsDbHp.sCreateTableCommand = "CREATE TABLE " + DB_SYS_TABLE + "(" +
				"sys_id INTEGER PRIMARY NOT NULL KEY AUTO_INCREMENT," +
				"index VARCHAR(50) NOT NULL," +
				"value VARCHAR(50) NOT NULL," +
				"COLLATE='utf8_unicode_ci';";

		mNewsDbRW = newsDbHp.getWritableDatabase();
		mNewsDbRW.close();
		
		newsDbHp.sCreateTableCommand = "CREATE TABLE " + DB_NEWS_TABLE + "(" +
				"news_id INTEGER PRIMARY NOT NULL KEY AUTO_INCREMENT," +
				"title VARCHAR(50) NOT NULL," +
				"content TEXT NOT NULL," +
				"createdate timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP )" +
				"COLLATE='utf8_unicode_ci';";

		mNewsDbRW = newsDbHp.getWritableDatabase();		
		mNewsDbRW.close();
	}

	private void _initial() {
		 systemPut("cache_exist_time", 3);
		 systemPut("simi_1st", 60);
		 systemPut("simi_2st", 30);
		 systemPut("simi_3st", 10);
		 systemPut("onto_limit", 100);
	}

	public void dbOpen(String type) throws SQLException {
		if (type == "r")
			mNewsDbRW = newsDbHp.getReadableDatabase();
		else if (type == "w")
			mNewsDbRW = newsDbHp.getWritableDatabase();
		else
			return;
	}
	
	public void dbClose() {
		if (mNewsDbRW != null)
			mNewsDbRW.close(); // close the database connection
	}	
	
	public void systemPut(String index, String value){
		ContentValues newRow = new ContentValues();
		
		newRow.put("index", name);
        newRow.put("value", name);
        
        dbOpen("r");
        mNewsDbRW.insertOrThrow(DB_SYS_TABLE, null, newRow);
        dBClose();

        return true;
	}

	public void newsPut(String title, String content, String date, String url){
		ContentValues newRow = new ContentValues();
		
		newRow.put("title", title);
        newRow.put("content", content);
        newRow.put("date", content);
        newRow.put("url", content);        
        
        dbOpen("r");
        mNewsDbRW.insertOrThrow(DB_NEWS_TABLE, null, newRow);
        dbClose();

        return true;
	}	
	
	public void systemSet(String index, String value){
		ContentValues newRow = new ContentValues();
		
		newRow.put("index", name);
        newRow.put("value", name);
        
        dbOpen("r");
        mNewsDbRW.update(DB_SYS_TABLE, newRow, "index=?", new String[] { _index });
        dbClose();
	}

	public void newsSet(String _id, String title, String content){
		ContentValues newRow = new ContentValues();
		
		newRow.put("name", title);
        newRow.put("value", content);
        
        dbOpen("r");
        mNewsDbRW.update(DB_NEWS_TABLE, newRow, "news_id=?", new String[] { _id });
        dbClose();
	}
	
	public void systemDelByIndex(String index){

        dbOpen("r");
        mNewsDbRW.delete(DB_SYS_TABLE, "index=?", new String[] { index });
        dbClose();
	}

	public void newsDelById(String _id){

        dbOpen("r");
        mNewsDbRW.delete(DB_NEWS_TABLE, "news_id=?", new String[] { _id });
        dbClose();
	}		
	
	public String systemGetByIndex(String index){

		
		dbOpen("r");
        Cursor cursor = mNewsDbRW.rawQuery(
                "select sys_id, index, value from " + DB_SYS_TABLE + "where index=?",
                new String[]{index});
		 while (cursor.moveToNext()) {
			 String row_sys_id = cursor.getString(0);
		     String row_name = cursor.getString(1);
		     String row_value = cursor.getString(2);
		     Log.d("system", "id:" + row_sys_id + " index:" + row_name + ", value:" + row_value);
		 }
		 cursor.close();
		 dbClose();
		 
		return index;
	}

	public void newsGetById(String _id){

        dbOpen("r");
        Cursor cursor = mNewsDbRW.rawQuery(
                "select news_id, title, content, createdate from " + DB_SYS_TABLE + "where news_id=?",
                new String[]{_id});
		while (cursor.moveToNext()) {
			String row_sys_id = cursor.getString(0);
		    String row_name = cursor.getString(1);
		    String row_value = cursor.getString(2);
		    Log.d("system", "id:" + row_sys_id + " name:" + row_name + ", value:" + row_value);
		}
		cursor.close();
		dbClose();

	}

    public void getOverTimeNewsId(int days) {

        String date;
        Calendar now = Calendar.getInstance();
        List<String> id_arr = new ArrayList<String>();

        now.add(Calendar.DATE,-days);
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        date = dateFormat.format(now);

        dbOpen("r");
        Cursor cursor = mNewsDbRW.rawQuery(
                "select news_id from " + DB_SYS_TABLE + "where cache_time<?",
                new String[]{date});

        while (cursor.moveToNext()) {
             id_arr.add(cursor.getString(0));
        }

        cursor.close();
        dbClose();

        return id_arr;
    }
}