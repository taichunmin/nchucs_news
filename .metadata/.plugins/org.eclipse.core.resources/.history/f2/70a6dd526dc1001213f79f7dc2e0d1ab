package edu.nchu.cs.news;

import java.util.HashMap;
import java.util.Map;

import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.SQLException;
import android.database.sqlite.SQLiteDatabase;
import android.util.Log;
import edu.nchu.cs.news.NewsDbHelper;



public class NewsDbConnector {
	
	private SQLiteDatabase mNewsDbRW;
	private NewsDbHelper newsDbHp; // database helper
	
	private static final String DB_NAME = "nchucsnews",
								DB_SYS_TABLE = "system",
								DB_NEWS_TABLE = "news_cache";
	
	public NewsDbConnector(Context context){
		newsDbHp =  new NewsDbHelper(context, DB_NAME, null, 1);

		newsDbHp.sCreateTableCommand = "CREATE TABLE " + DB_SYS_TABLE + "(" +
				"sys_id INTEGER PRIMARY NOT NULL KEY AUTO_INCREMENT," +
				"index VARCHAR(50) NOT NULL," +
				"value VARCHAR(50) NOT NULL," +
				"COLLATE='utf8_unicode_ci';";

		mNewsDbRW = newsDbHp.getWritableDatabase();
		mNewsDbRW.close();
		
		newsDbHp.sCreateTableCommand = "CREATE TABLE " + DB_NEWS_TABLE + "(" +
				"news_id INTEGER PRIMARY NOT NULL KEY AUTO_INCREMENT," +
				"title VARCHAR(50) NOT NULL," +
				"content TEXT NOT NULL," +
				"createdate timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP )" +
				"COLLATE='utf8_unicode_ci';";

		mNewsDbRW = newsDbHp.getWritableDatabase();		
		mNewsDbRW.close();

		initial();
	}

	private void initial() {
		systemPut("token", "0");
		systemPut("limit_per_page", "200");
		systemPut("cache_exist_time", "3");
		systemPut("simi_1st", "60");
		systemPut("simi_1st", "30");
		systemPut("simi_1st", "10");
		systemPut("onto_limit", "100");
	}

	public void dbOpen(String type) throws SQLException {
		if (type == "r")
			mNewsDbRW = newsDbHp.getReadableDatabase();
		else if (type == "w")
			mNewsDbRW = newsDbHp.getWritableDatabase();
		else {}

	}
	
	public void dbClose() {
		if (mNewsDbRW != null)
			mNewsDbRW.close(); // close the database connection
	}	
	
	public void systemPut(String index, String value){
		ContentValues newRow = new ContentValues();
		
		newRow.put("index", index);
        newRow.put("value", value);
        
        dbOpen("r");
        mNewsDbRW.insertOrThrow(DB_SYS_TABLE, null, newRow);
        dbClose();
	}

	public void newsPut(String title, String content){
		ContentValues newRow = new ContentValues();
		
		newRow.put("title", title);
        newRow.put("content", content);
       
        dbOpen("r");
        mNewsDbRW.insertOrThrow(DB_NEWS_TABLE, null, newRow);
        dbClose();
	}	
	
	public void systemSet(String _id, String index, String value){
		ContentValues newRow = new ContentValues();
		
		newRow.put("index", index);
        newRow.put("value", value);
        
        dbOpen("r");
        mNewsDbRW.update(DB_SYS_TABLE, newRow, "sys_id=?", new String[] { _id });
        dbClose();
	}

	public void newsSet(String _id, String title, String content, String date, String url){
		ContentValues newRow = new ContentValues();
		
		newRow.put("title", title);
        newRow.put("content", content);
		newRow.put("date", date);
		newRow.put("url", url);
        
        dbOpen("r");
        mNewsDbRW.update(DB_NEWS_TABLE, newRow, "_id=?", new String[] { _id });
        dbClose();
	}
	
	public void systemDelById(String _id){

        dbOpen("r");
        mNewsDbRW.delete(DB_SYS_TABLE, "_id=?", new String[] { _id });
        dbClose();
	}

	public void newsDelById(String _id){

        dbOpen("r");
        mNewsDbRW.delete(DB_NEWS_TABLE, "_id=?", new String[] { _id });
        dbClose();
	}		
	
	public Map<String, String> systemGetByIndex(String index){

		Map<String, String> map = new HashMap<String, String>();

		dbOpen("r");
        Cursor cursor = mNewsDbRW.rawQuery(
                "select _id, index, value from " + DB_SYS_TABLE + "where index=?",
                new String[]{index});
	 	while (cursor.moveToNext()) {
		 	map.put("id",      	cursor.getString(0));
            map.put("index",	cursor.getString(1));
            map.put("value",    cursor.getString(2));
		}
		cursor.close();
		dbClose();

		return map;
	}

	public Map<String, String> newsGetById(String _id){

		Map<String, String> map = new HashMap<String, String>();

        dbOpen("r");
        Cursor cursor = mNewsDbRW.rawQuery(
                "select _id, title, content, url, date, cache_time from " + DB_SYS_TABLE + "where _id=?",
                new String[]{_id});
		while (cursor.moveToNext()) {
			map.put("id",      		cursor.getString(0));
			map.put("title",		cursor.getString(1));
			map.put("content",		cursor.getString(2));
			map.put("url",    		cursor.getString(3));
			map.put("date",			cursor.getString(4));
			map.put("cache_time",	cursor.getString(5));
		}
		cursor.close();
		dbClose();

		return map;
	}		
}
