// DatabaseConnector.java
// Provides easy connection and creation of UserContacts database.
package edu.nchu.cs.news;

import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.SQLException;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;
import android.database.sqlite.SQLiteDatabase.CursorFactory;



public class DBConnector{
{
   // database name
    private static final String DB_NAME = "nchucsnews",
                                DB_NEWS_TABLE = "news_cache",
                                DB_SYS_TABLE = "system";

    private SQLiteDatabase mNewsDbRW;
    private DatabaseOpenHelper dbOpenHelper;

    public DBConnector(Bundle savedInstanceState)
    {
       // dbOpenHelper = new DatabaseOpenHelper(context, db_name, null, 1);

        super.onCreate(savedInstanceState);

        // 建立自訂的 FriendDbHelper 物件
        NewsDbHelper newsDbHp = new NewsDbHelper(
                getApplicationContext(), DB_FILE,
                null, 1);
        
        // 設定建立 table 的指令
        newsDbHp.sCreateTableCommand = "CREATE TABLE " + DB_TABLE + "(" +
                                    "_id INTEGER PRIMARY KEY," +
                                    "name TEXT NOT NULL," +
                                    "sex TEXT," +
                                    "address TEXT);";

        // 取得上面指定的檔名資料庫，如果該檔名不存在就會自動建立一個資料庫檔案
        mNewsDbRW = newsDbHp.getWritableDatabase();        
    } 


    public void open() throws SQLException 
    {
       mNewsDbRW = dbOpenHelper.getWritableDatabase();
    } 

    public void close() 
    {
      if (mNewsDbRW != null)
          mNewsDbRW.close(); 
    } 

    // inserts a new contact in the database
    public void systemSet( String name, String value ) 
    {
      ContentValues newContact = new ContentValues();
      /*
      newContact.put("name", name);
      newContact.put("email", email);
      newContact.put("phone", phone);
      newContact.put("street", state);
      newContact.put("city", city);
      */

      open(); // open the database
      mNewsDbRW.insert("contacts", null, newContact);
      close(); // close the database
    } // end method insertContact

    // inserts a new contact in the database
    public void updateContact(long id, String name, String email, 
      String phone, String state, String city) 
    {
      ContentValues editContact = new ContentValues();
      editContact.put("name", name);
      editContact.put("email", email);
      editContact.put("phone", phone);
      editContact.put("street", state);
      editContact.put("city", city);

      open(); // open the database
      mNewsDbRW.update("contacts", editContact, "_id=" + id, null);
      close(); // close the database
    } // end method updateContact

    // return a Cursor with all contact information in the database
    public Cursor getAllContacts() 
    {
      return mNewsDbRW.query("contacts", new String[] {"_id", "name"}, 
         null, null, null, null, "name");
    } // end method getAllContacts

    // get a Cursor containing all information about the contact specified
    // by the given id
    public Cursor getOneContact(long id) 
    {
      return mNewsDbRW.query(
         "contacts", null, "_id=" + id, null, null, null, null);
    } // end method getOnContact

    // delete the contact specified by the given String name
    public void deleteContact(long id) 
    {
      open(); // open the database
      mNewsDbRW.delete("contacts", "_id=" + id, null);
      close(); // close the database
    } // end method deleteContact


   
    private class NewsDbHelper extends SQLiteOpenHelper {

        public String sCreateTableCommand;

        public NewsDbHelper(Context context, String name, CursorFactory factory,
                int version) {
            super(context, name, factory, version);
            // TODO Auto-generated constructor stub

            sCreateTableCommand="";
        }

        @Override
        public void onCreate(SQLiteDatabase db) {
            // TODO Auto-generated method stub

            if (sCreateTableCommand.isEmpty())
                return;
            
            db.execSQL(sCreateTableCommand);
        }

        @Override
        public void onUpgrade(SQLiteDatabase db, int oldVer, int newVer) {
            // TODO Auto-generated method stub

        }

    }

} // end class DatabaseConnector